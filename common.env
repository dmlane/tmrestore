# vim:syntax=bash filetype=sh
# Common code for scripts

shopt -s expand_aliases

source_if_exists() { [ -f $1 ] && . $1;}


function usage {
    echo "Usage for $0"
    sed --silent -e '/DOCXX$/,/^DOC/p' $0 |sed -e '/DOCXX/d'
    exit 1
}
#-----------------------------------------------------------
if [ "$1" = "-h" -o "$1" = "-help" ] ; then
    usage
fi
if [ "$1" = "--version" ] ; then
	echo "__VERSION__"
	exit 0
fi
# Portable way of getting full path ....
readlinkf(){ perl -MCwd -e 'print Cwd::abs_path shift' "$1";}

FLOCK=${HOMEBREW_BASE}/bin/flock
if [ $WF ] ; then
	NO_CLEANUP=Y
else
	export WF=/tmp/WF_$$_$(date +"%Y%m%d%H%M%S")
	export lck_file=/tmp/.$(readlinkf $0|shasum -a 256|cut -d " " -f1).lck
	export script_dir=$(readlinkf $0|sed 's?/[^/]*$??')
fi
alias run_exclusive='[ "${FLOCKER}" != "$lck_file" ] && exec env FLOCKER="$lck_file" '$FLOCK' -n "$lck_file" "$0" "$@" || :'

# Prompt user for Y or N
function yn {
    while :
    do
        read -p "${1}? " -n 1 -r
        [[ $REPLY =~ ^[YynN] ]] && echo " "
        [[ $REPLY =~ ^[Yy] ]] && return 0
        [[ $REPLY =~ ^[Nn] ]] && return 1
        echo -ne "\033[0K\r"
    done
}
function on_exit {
	rm -f $lck_file ${WF}* 2>/dev/null 
	exit
}
[ $NO_CLEANUP ] || trap on_exit 0 1 2 15

alias echoerr='>&2 echo'
# Colors I use .......
if [ -t 0 ] ; then
    DARK_GREY=$'\e[1;30m'
    BLUE=$'\e[1;34m'
    GREEN=$'\e[1;32m'
    YELLOW=$'\e[1;33m'
    RED=$'\e[1;31m'
    NC=$'\e[1;0m'
fi
highlight() {
    # example usage:
    # highlight "A ^highlighted^ mess^age"
	sed -e "s/^\([^\^]\)/${GREEN}\1/" -e "s/\^\([^\^]*\)\^/${YELLOW}\1${GREEN}/g" -e "s/\^/${YELLOW}/" -e "s/$/${NC}/"  <<< "$1"
}
lolight() {
	echo -e "${DARK_GREY}$1${NC}"
}
debug() {
	[ $DEBUG ] && highlight "${BLUE}DEBUG:^$*"
}

require_commands() {
	local cmd
	local problem_count=0
	for cmd in $*
	do
		command -v $cmd >/dev/null 2>&1 && continue
		(( problem_count++ ))
		highlight "^${cmd}^ not installed"
	done
	[ $problem_count -gt 0 ] && fail "Cannot continue"
}

fail() { echo -e "${RED}$1 - aborting ??????????${NC}"; exit 1;}
success() { echo -e "${GREEN}$1 - successful +++++++++++${NC}"; exit 0;}
	
# Setup pyenv if present
source_if_exists  ~/.local/bin/lib/pyenv.setup

